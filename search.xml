<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java根据合同模板生成文件</title>
      <link href="/2021/09/28/Java%E6%A0%B9%E6%8D%AE%E6%A8%A1%E6%9D%BF%E7%94%9F%E6%88%90%E6%96%87%E4%BB%B6/"/>
      <url>/2021/09/28/Java%E6%A0%B9%E6%8D%AE%E6%A8%A1%E6%9D%BF%E7%94%9F%E6%88%90%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<p>​        在这里记录一下在工作中遇到的一个问题：将客户提供的合同模板填充数据库中查询出来的数据，然后在合同的页眉添加防伪二维码或水印再提供给客户下载。在写的过程中走了一些弯路，不过好在最后还是成功解决~</p><span id="more"></span><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>​        首先，客户提供的模板非常多有Xls，Xlsx，Docx这三种格式，我首先看了下网上的解决方案：有的是用 Apache POI 包直接来进行读写，当然也有GitHub上大佬封装好的jar包底层也是调用的 Apache POI 包但是操作简化了很多。我这里用到了2个包：<a href="http://deepoove.com/poi-tl/">Poi-tl Documentation</a>，<a href="https://www.kancloud.cn/zhangdaiscott/autopoi/1623954">AutoPoi</a> 其中 AutoPoi 是 Excel  和  Word 都能进行操作的而 Poi-tl 则是专注于操作 Docx 。</p><p>​        因为 AutoPoi 是大部分 Office 文件都能操作的 所以我首先选择使用了它，按照文档上的提示替换好所有模板中的标签的后，测试 Docx 的文件没啥问题，但是 Excel 的文件如果涉及到文件中有多个明细行要写入的时候 文档下面的内容就会错位… 最后我将问题定位到客户提供的模板上，只要将模板中表格的“自动换行” 属性去除掉再导出的文件就正常了✌。</p><p>​        前面提到导出的文件是要添加水印和防伪二维码的，Word 仍然是没有什么问题，只不过 Excel 文件添加水印和防伪二维码非常困难🙃，首先 Excel 是不支持“水印”这个功能的，想要做到类似的网上的方法大致分为2种 ：设置 Excel 的背景图片但是这种方式打印的时候不能将“水印”打印出来，第二种是使用“艺术字”功能程序在 Excel 文件上按照一定的逻辑贴上，这种方法虽然可以打印出来但用户可以轻松的编辑“艺术字”所以也是不可取的，再说说防伪二维码：Excel 在页眉上写一张图片的方法也是非常少的，试了很多大多都不可用。</p><p>​        最后的解决方案是：和客户协商将所有的 Excel 文件都转为Docx文件，后端生成 Jar 包则从 AutoPoi 换为 Poi-tl ，这样就不用去支持Excel 了！🤣🤣   Poi-tl 设置页眉非常方便且语法和 AutoPoi  很相近，稍作修改就能兼容。下面简单说下用法。</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><h2 id="将一个普通的值放到文件中"><a href="#将一个普通的值放到文件中" class="headerlink" title="将一个普通的值放到文件中"></a>将一个普通的值放到文件中</h2><p>在后端中这样写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">XWPFTemplate template = XWPFTemplate.compile(<span class="string">&quot;template.docx&quot;</span>).render(  </span><br><span class="line"><span class="keyword">new</span> HashMap&lt;String, Object&gt;()&#123;&#123;put(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;Hi, poi-tl Word模板引擎&quot;</span>);&#125;&#125;</span><br><span class="line">);</span><br><span class="line">template.writeAndClose(<span class="keyword">new</span> FileOutputStream(<span class="string">&quot;output.docx&quot;</span>));</span><br></pre></td></tr></table></figure><p>在模板中设置标签&#123;&#123;title&#125;&#125;到对应位置</p><h2 id="将一个表格放到文件中"><a href="#将一个表格放到文件中" class="headerlink" title="将一个表格放到文件中"></a>将一个表格放到文件中</h2><p>后端中需要这样写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//组装表格列表数据</span></span><br><span class="line">List&lt;Map&lt;String,Object&gt;&gt; detailList=<span class="keyword">new</span> ArrayList&lt;Map&lt;String,Object&gt;&gt;();</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++) &#123;</span><br><span class="line">    Map&lt;String,Object&gt; detailMap = <span class="keyword">new</span> HashMap&lt;String, Object&gt;();</span><br><span class="line">    detailMap.put(<span class="string">&quot;index&quot;</span>, i+<span class="number">1</span>);<span class="comment">//序号</span></span><br><span class="line">    detailMap.put(<span class="string">&quot;goods&quot;</span>, <span class="string">&quot;商品&quot;</span>+i);<span class="comment">//商品名称</span></span><br><span class="line">    detailList.add(detailMap);</span><br><span class="line">&#125;</span><br><span class="line">HackLoopTableRenderPolicy policy = <span class="keyword">new</span> HackLoopTableRenderPolicy();</span><br><span class="line">Configure config = Configure.newBuilder().bind(<span class="string">&quot;detailList&quot;</span>, policy).build();</span><br><span class="line">XWPFTemplate template = XWPFTemplate.compile(<span class="string">&quot;填写模板地址&quot;</span>, config).render(</span><br><span class="line">        <span class="keyword">new</span> HashMap&lt;String, Object&gt;() &#123;&#123;</span><br><span class="line">        put(<span class="string">&quot;detailList&quot;</span>, detailList);</span><br><span class="line">        put(<span class="string">&quot;title&quot;</span>, <span class="string">&quot;Hi, poi-tl Word模板引擎&quot;</span>);</span><br><span class="line">    &#125;&#125;</span><br><span class="line">);</span><br><span class="line">FileOutputStream fos = <span class="keyword">new</span> FileOutputStream(<span class="string">&quot;填写实例化路径&quot;</span>);</span><br><span class="line">template.write(fos);</span><br></pre></td></tr></table></figure><p>模板中需要这样写：</p><p>&#123;&#123;title&#125;&#125;</p><table><thead><tr><th align="center">&#123;&#123;detailList&#125;&#125;序号</th><th align="center">商品名称</th></tr></thead><tbody><tr><td align="center">[index]</td><td align="center">[goods]</td></tr></tbody></table><h2 id="页眉添加防伪二维码"><a href="#页眉添加防伪二维码" class="headerlink" title="页眉添加防伪二维码"></a>页眉添加防伪二维码</h2><p>Poi-tl支持很多格式的图片，我这里用的是 Byte[] 形式的 PNG 二维码图片，生成二维码的 Jar 包很多，这里不再深究。</p><p>后端中需要这样写：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">map.put(<span class="string">&quot;picture&quot;</span>,PictureRenderData(<span class="number">50</span>, <span class="number">50</span>, PictureType.PNG, Byte[]形式的PNG对象));</span><br></pre></td></tr></table></figure><p>在模板中图片标签以@开始：&#123;&#123;@picture&#125;&#125;    且只要将&#123;&#123;@picture&#125;&#125;标签放到页眉中就可以做到每页都有防伪二维码的效果！</p><h2 id="模板获取"><a href="#模板获取" class="headerlink" title="模板获取"></a>模板获取</h2><p>如果你的模板在 resource 下，那么我推荐你使用相对位置获取输入流，这样可以防止在 Linux 上部署时找不到模板~✨</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">InputStream mouldPath = <span class="keyword">this</span>.getClass().getResourceAsStream(<span class="string">&quot;/templates/1.docx);</span></span><br></pre></td></tr></table></figure><p>打好包的文件如果不能读取或者读取的是损坏的文件那么可能是 Maven 对文件进行了编译导致文件损坏，这时需要在项目根pom文件添加以下过滤内容，其中的nonFilteredFileExtension节点按需填写。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-resources-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;maven-resources-plugin.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">encoding</span>&gt;</span>UTF-8<span class="tag">&lt;/<span class="name">encoding</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">nonFilteredFileExtensions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>xls<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>xlsx<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>doc<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>docx<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">nonFilteredFileExtension</span>&gt;</span>pdf<span class="tag">&lt;/<span class="name">nonFilteredFileExtension</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">nonFilteredFileExtensions</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="前端下载"><a href="#前端下载" class="headerlink" title="前端下载"></a>前端下载</h2><p>Controller层</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> ApiResult&lt;Boolean&gt; <span class="title">exportDataWord</span><span class="params">(HttpServletResponse response)</span></span>&#123;</span><br><span class="line">        XWPFTemplate template = 填充好数据后返回的XWPFTemplate对象;</span><br><span class="line">        String fileName = <span class="string">&quot;文件名.docx&quot;</span></span><br><span class="line">        response.setContentType(<span class="string">&quot;application/force-download&quot;</span>);</span><br><span class="line">        response.addHeader(<span class="string">&quot;Content-Disposition&quot;</span>, <span class="string">&quot;attachment;fileName=&quot;</span> + fileName);</span><br><span class="line">        OutputStream out = response.getOutputStream();</span><br><span class="line">        template.write(out);</span><br><span class="line">        out.flush();</span><br><span class="line">        out.close();</span><br><span class="line">        template.close();</span><br><span class="line">        <span class="keyword">return</span> ApiResult.result(<span class="keyword">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Vue前端</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">this</span>.$http.request(&#123;</span><br><span class="line">        <span class="attr">url</span>: url,</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">showLoading</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">responseType</span>: <span class="string">&quot;blob&quot;</span></span><br><span class="line">    &#125;).then(<span class="function">(<span class="params">res</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">let</span> blob = <span class="keyword">new</span> Blob([res],&#123; <span class="attr">type</span>: <span class="string">&#x27;application/vnd.openxmlformats-officedocument.wordprocessingml.document&#x27;</span>&#125;);</span><br><span class="line">            <span class="keyword">let</span> downloadElement = <span class="built_in">document</span>.createElement(<span class="string">&quot;a&quot;</span>);</span><br><span class="line">            <span class="keyword">let</span> href = <span class="built_in">window</span>.URL.createObjectURL(blob); <span class="comment">//创建下载的链接</span></span><br><span class="line">            downloadElement.href = href;</span><br><span class="line">            downloadElement.download = <span class="keyword">new</span> <span class="built_in">Date</span>().getTime()+<span class="string">&quot;.docx&quot;</span>; <span class="comment">//下载后文件名</span></span><br><span class="line">            <span class="built_in">document</span>.body.appendChild(downloadElement);</span><br><span class="line">            downloadElement.click(); <span class="comment">//点击下载</span></span><br><span class="line">            <span class="built_in">document</span>.body.removeChild(downloadElement); <span class="comment">//下载完成移除元素</span></span><br><span class="line">            <span class="built_in">window</span>.URL.revokeObjectURL(href); <span class="comment">//释放掉blob对象</span></span><br><span class="line">        &#125;).finally(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="built_in">this</span>.Query();</span><br><span class="line">        &#125;);</span><br></pre></td></tr></table></figure><p>其中 type 参数按需填写</p><table><thead><tr><th align="center">文件后缀</th><th align="center">blob对应的type</th></tr></thead><tbody><tr><td align="center">.doc</td><td align="center">application/msword</td></tr><tr><td align="center">.docx</td><td align="center">application/vnd.openxmlformats-officedocument.wordprocessingml.document</td></tr><tr><td align="center">.xls</td><td align="center">application/vnd.ms-excel</td></tr><tr><td align="center">.xlsx</td><td align="center">application/vnd.openxmlformats-officedocument.spreadsheetml.sheet</td></tr><tr><td align="center">.txt</td><td align="center">text/plain</td></tr></tbody></table><p>友情提示：如果下载不了可以调试前端看看是不是被$http拦截器给拦截了，并做了其他的处理。</p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 文件生成 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello Hexo</title>
      <link href="/2021/08/12/Hello%20Hexo/"/>
      <url>/2021/08/12/Hello%20Hexo/</url>
      
        <content type="html"><![CDATA[<p>Hexo是一款能将Markdown文件解析成为Html文件的博客，配合GitPage在成本，速度，外观上都有很出色的表现，本文是我使用Hexo的第一篇，意在熟悉Hexo配合freemind主题的样式与配置.</p><span id="more"></span><p><img src="https://cdn.59ict.com/assets/1628826509768bHc76a2m.png" alt="v2-55d7911a24217554d57c7827c51f06e1_1440w"></p><h1 id="代码引用"><a href="#代码引用" class="headerlink" title="代码引用"></a>代码引用</h1><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo g</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo server</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo d</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@SpringBootApplication</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Application</span> </span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">( String[] args )</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">    SpringApplication.run(Application.class, args);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="超链接"><a href="#超链接" class="headerlink" title="超链接"></a>超链接</h1><p>本文使用<a href="https://hexo.io/">Hexo</a> + <a href="https://github.com/">GithubPages</a> + 自建图床</p><h1 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h1><blockquote><p>《船》</p><p>​    每个人都在挥手，但火车只管往前，因为它别无选择，也因为它不喜欢看人挥手道别。远远地，我看到爷爷转身，沿着他的山向上走去。于是，剩下的只有车厢的摇晃和吱呀声，只有大海的蓝和它上空的海鸥，只有大山的绿和矿场在它身侧划开的深深的伤口。我们什么话都没有，只坐在静默和孤独中。我们来时走了很长的路，所以，还有很长的路要走。                                                                                        </p></blockquote><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><p><strong>加粗</strong>  <em>倾斜</em>  <em><strong>加粗倾斜</strong></em> 重点</p><h1 id="有序列表"><a href="#有序列表" class="headerlink" title="有序列表"></a>有序列表</h1><ol><li>这是有序列表1</li><li>这是有序列表2</li><li>这是有序列表3</li></ol><h1 id="无序列表"><a href="#无序列表" class="headerlink" title="无序列表"></a>无序列表</h1><ul><li>这是无序列表1</li><li>这是无序列表2</li><li>这是无序列表3</li></ul><h1 id="常用转义符"><a href="#常用转义符" class="headerlink" title="常用转义符"></a>常用转义符</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">! &amp;#33; — 惊叹号 Exclamation mark</span><br><span class="line">” &amp;#34; &amp;quot; 双引号 Quotation mark</span><br><span class="line"># &amp;#35; — 数字标志 Number sign</span><br><span class="line">$ &amp;#36; — 美元标志 Dollar sign</span><br><span class="line">% &amp;#37; — 百分号 Percent sign</span><br><span class="line">&amp; &amp;#38; &amp;amp; Ampersand</span><br><span class="line">‘ &amp;#39; — 单引号 Apostrophe</span><br><span class="line">( &amp;#40; — 小括号左边部分 Left parenthesis</span><br><span class="line">) &amp;#41; — 小括号右边部分 Right parenthesis</span><br><span class="line">* &amp;#42; — 星号 Asterisk</span><br><span class="line">+ &amp;#43; — 加号 Plus sign</span><br><span class="line">&lt; &amp;#60; &amp;lt; 小于号 Less than</span><br><span class="line">= &amp;#61; — 等于符号 Equals sign</span><br><span class="line">- &amp;#45; &amp;minus; — 减号</span><br><span class="line">&gt; &amp;#62; &amp;gt; 大于号 Greater than</span><br><span class="line">? &amp;#63; — 问号 Question mark</span><br><span class="line">@ &amp;#64; — Commercial at</span><br><span class="line">[ &amp;#91; --- 中括号左边部分 Left square bracket</span><br><span class="line">\ &amp;#92; --- 反斜杠 Reverse solidus (backslash)</span><br><span class="line">] &amp;#93; — 中括号右边部分 Right square bracket</span><br><span class="line">&#123; &amp;#123; — 大括号左边部分 Left curly brace</span><br><span class="line">| &amp;#124; — 竖线Vertical bar</span><br><span class="line">&#125; &amp;#125; — 大括号右边部分 Right curly brace</span><br></pre></td></tr></table></figure><h1 id="I18N"><a href="#I18N" class="headerlink" title="I18N"></a>I18N</h1><p>もしある種の能力に喜びを感じるのであれば、あなたがその中で最強であって欲しい。</p><p>如果快乐是一种本领的话，那我希望你是那个最厉害的人</p><p>If happiness is a skill, then I hope you are the most powerful person.</p>]]></content>
      
      
      <categories>
          
          <category> Blog </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
